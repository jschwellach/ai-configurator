name: "context-switcher"
description: "Dynamically load contexts based on project type and current working environment"
version: "1.0"
type: "enhancement"
trigger: "on_session_start"
timeout: 30
enabled: true

# Configuration for intelligent context switching
config:
  # Project type detection patterns
  project_detection:
    # Python projects
    python:
      indicators:
        - "requirements.txt"
        - "pyproject.toml"
        - "setup.py"
        - "Pipfile"
      file_patterns:
        - "**/*.py"
      contexts:
        - "contexts/domains/data-science-best-practices.md"
        - "contexts/workflows/code-review-process.md"
        - "contexts/workflows/testing-strategies.md"
      priority: 8

    # JavaScript/Node.js projects
    javascript:
      indicators:
        - "package.json"
        - "yarn.lock"
        - "package-lock.json"
      file_patterns:
        - "**/*.js"
        - "**/*.ts"
        - "**/*.jsx"
        - "**/*.tsx"
      contexts:
        - "contexts/domains/technical-writing-standards.md"
        - "contexts/workflows/code-review-process.md"
      priority: 7

    # Data science projects
    data_science:
      indicators:
        - "*.ipynb"
        - "requirements.txt"
        - "environment.yml"
        - "conda.yml"
      file_patterns:
        - "**/*.ipynb"
        - "**/*.py"
      keywords:
        - "pandas"
        - "numpy"
        - "scikit-learn"
        - "tensorflow"
        - "pytorch"
        - "jupyter"
      contexts:
        - "contexts/domains/data-science-best-practices.md"
        - "contexts/workflows/testing-strategies.md"
      priority: 9

    # DevOps projects
    devops:
      indicators:
        - "Dockerfile"
        - "docker-compose.yml"
        - "Jenkinsfile"
        - "terraform.tf"
        - ".github/workflows"
        - ".gitlab-ci.yml"
      file_patterns:
        - "**/Dockerfile*"
        - "**/*.tf"
        - "**/*.yml"
        - "**/*.yaml"
      contexts:
        - "contexts/domains/devops-methodologies.md"
        - "contexts/workflows/incident-response.md"
      priority: 8

    # Security projects
    security:
      indicators:
        - "security.md"
        - "SECURITY.md"
        - "vulnerability-scan.yml"
      file_patterns:
        - "**/security/**"
        - "**/sec/**"
      keywords:
        - "security"
        - "vulnerability"
        - "penetration"
        - "audit"
        - "compliance"
      contexts:
        - "contexts/domains/security-guidelines.md"
        - "contexts/workflows/incident-response.md"
      priority: 9

    # Documentation projects
    documentation:
      indicators:
        - "docs/"
        - "documentation/"
        - "mkdocs.yml"
        - "sphinx/"
        - "_config.yml"
      file_patterns:
        - "**/*.md"
        - "**/*.rst"
        - "**/*.adoc"
      contexts:
        - "contexts/domains/technical-writing-standards.md"
        - "contexts/domains/content-creation-guidelines.md"
      priority: 6

  # Context switching rules
  switching_rules:
    # Maximum number of contexts to load simultaneously
    max_contexts: 5

    # Minimum confidence score to load a context (0.0 - 1.0)
    min_confidence: 0.6

    # Whether to merge contexts from multiple detected project types
    merge_project_types: true

    # Context priority weighting (higher = more likely to be selected)
    priority_weights:
      file_indicators: 0.4
      file_patterns: 0.3
      keywords: 0.2
      manual_override: 0.1

  # Manual context overrides
  manual_overrides:
    # Allow users to specify contexts for specific directories
    directory_contexts:
      "src/": ["contexts/workflows/code-review-process.md"]
      "tests/": ["contexts/workflows/testing-strategies.md"]
      "docs/": ["contexts/domains/technical-writing-standards.md"]

    # Allow users to specify contexts for specific file types
    file_type_contexts:
      ".py": ["contexts/domains/data-science-best-practices.md"]
      ".md": ["contexts/domains/technical-writing-standards.md"]
      ".yml": ["contexts/domains/devops-methodologies.md"]

  # Fallback contexts (loaded when no specific project type is detected)
  fallback_contexts:
    - "contexts/workflows/code-review-process.md"
    - "contexts/domains/technical-writing-standards.md"

# Execution script
script: "context_switcher.py"

# Conditions for when this hook should run
conditions:
  - trigger: "session_start"
    project_type: ["any"]
  - trigger: "directory_change"
    project_type: ["any"]

# Context sources that this hook itself uses
context:
  sources:
    - "contexts/domains/technical-writing-standards.md"
  tags: ["context-management", "automation", "intelligence"]
  priority: 5

# Metadata
metadata:
  author: "AI Configurator Team"
  category: "enhancement"
  complexity: "high"
  prerequisites:
    - "Python 3.8+"
    - "Project directory structure"
    - "Available context files"
  related_hooks:
    - "smart-suggestions"
    - "environment-setup"
  examples:
    - "Automatically loads data science contexts for Jupyter notebook projects"
    - "Switches to DevOps contexts when working in infrastructure directories"
    - "Applies security contexts for projects with security indicators"
